package com.example.demo.user.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Select;
import com.example.demo.user.model.GeneralTransactionHistory;
import com.example.demo.user.model.Transactionhistory;

@Mapper
public interface FixedAssetMMSMapper {

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms  where  dfmms.original_cost between #{debit} and  #{credit}  and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where fmms.original_cost between #{debit} and  #{credit}  and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and   fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithDebitCreditMMS(GeneralTransactionHistory searchHistory);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms   where   (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where   ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' )  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceMMS(GeneralTransactionHistory transaction_history);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms  where   dfmms.original_cost >=  #{debit} and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  fmms.original_cost >=#{debit} and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%')  and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceAndDebit(GeneralTransactionHistory transaction_history);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms  where dfmms.original_cost<=  #{credit} and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%')  and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%'  union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where fmms.original_cost <= #{credit} and ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' )   and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceAndCredit(GeneralTransactionHistory transaction_history);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms  where dfmms.original_cost <= #{credit} and  cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%'  union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  fmms.original_cost <= #{credit}  and cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date}  and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithTransactionDateAndCredit(GeneralTransactionHistory transaction_history);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   dfmms.original_cost >=#{debit} and  cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where    fmms.original_cost >= #{debit} and cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithTransactionDateAndDebit(GeneralTransactionHistory transaction_history);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where     cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%')   union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date}   and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReference_TransactionDate_MatchDateMMS(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where     cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.original_cost between #{debit} and #{credit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date}    and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.original_cost between #{debit} and #{credit} and    fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithAllCriteriaMMS(GeneralTransactionHistory transacrtion);

	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and fmms.original_cost >=#{debit} and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}   and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%'  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithTransactionDateAndMatchDateAndDebit(GeneralTransactionHistory transacrtion);

	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and fmms.original_cost <= #{credit}    and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%'and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithTransactionDateAndMatchDateAndCredit(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where     (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and (dfmms.original_cost ) >=#{debit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and  fmms.original_cost>= #{debit}   and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%'  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithDebitAndMatchDateAndReference(GeneralTransactionHistory transacrtion);

	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and  fmms.original_cost between  #{debit}  and #{credit}  and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}   and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithDebitAndCreditAndMatchDateAndReference(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   (dfmms.original_cost ) >=#{debit}  union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  fmms.original_cost>= #{debit}  and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}   and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithMatchDateAndDebit(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   dfmms.original_cost <= #{credit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  fmms.original_cost <= #{credit}   and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithMatchDateAndCredit(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   dfmms.original_cost <= #{credit} and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and  fmms.original_cost <= #{credit}  and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithCreditAndMatchDateAndReference(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where  (dfmms.original_cost ) >=#{debit} and  cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and  (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and  fmms.original_cost >=#{debit} and cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithDebitAndTransactionDateAndReference(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   dfmms.original_cost <= #{credit} and  cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and  (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where   (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.original_cost <= #{credit} and cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithCreditAndTransactionDateAndReference(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   dfmms.original_cost between #{debit} and #{credit}   and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and fmms.original_cost between #{debit} and #{credit}  and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithDebitCreditAndReference(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   dfmms.original_cost between #{debit} and #{credit}   and  cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and  (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and fmms.original_cost between #{debit} and #{credit}  and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1 and  (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%'")

	List<Transactionhistory> searchWithDebitCreditAndTransactionDate(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and   fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceAndMatchDate(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' and  cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date}  union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where cast (fmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and  (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and   fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceAndTransactionDate(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   dfmms.original_cost >=  #{debit}  and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  fmms.original_cost >=  #{debit}  and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")

	public List<Transactionhistory> searchWithDebitMMS(GeneralTransactionHistory transaction_history);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   dfmms.original_cost <=#{credit}  and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  fmms.original_cost <=#{credit}  and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithCreditMMS(GeneralTransactionHistory transactionHistory);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where    cast(dfmms.created_date as date)  between  #{transaction_date} and #{max_upload_date} and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%'  union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where    cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithTransactionDateMMS(GeneralTransactionHistory transactionHistory);

	// @Select("select distinct
	// dfmms.id,dfmms.match_status,dfmms.giv_number as
	// reference,dfmms.asset_description as
	// additional_information,dfmms.original_cost as debit,dfmms.book_value as
	// credit,dfmms.branch_name as tran_code,dfmms.tag_number as
	// store_name,dfmms.grv_number as store_code,dfmms.main_pg as
	// category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg
	// as stock_account_segment
	// from data_fixed_mms dfmms union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  fm.fixed_mms_id = fmms.id and fm.match_date  between  #{match_date2}  and #{max_match_date2}   and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithMatchDateMMS(GeneralTransactionHistory transactionHistory);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where     cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where    cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date}  and fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}   and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithTransactionDateMatchDateMMS(GeneralTransactionHistory transactionHistory);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where    cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.original_cost <= #{credit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where    cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date}  and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.original_cost <= #{credit} and fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")
	List<Transactionhistory> searchWithReferenceAndTransactionDateMatchDateCredit(
			GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where   dfmms.original_cost  between #{debit} and #{credit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  fmms.original_cost  between #{debit} and #{credit} and fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%'  and fmms.availability = 1 and fmms.status=1")
	List<Transactionhistory> searchWithDebitMatchDateCredit(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where    cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.original_cost>= #{debit} union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where    cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date} and ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and fmms.original_cost >= #{debit} and fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceAndTransactionDateMatchDateDebit(
			GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms    where    cast(dfmms.created_date as date) between  #{transaction_date} and #{max_upload_date}  anddfmms.original_costbetween #{debit} and  #{credit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where  cast(fmms.created_date as date) between  #{transaction_date} and #{max_upload_date}  and fmms.original_cost between #{debit} and  #{credit}  and (fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%') and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithDebitCreditAndTransactionDateMatchDate(GeneralTransactionHistory transacrtion);

	/////////////////////////////////////////////

	@Select(" select fm.tag_number as store_name, fm.asset_description as additional_information, fm.old_main_pg as stock_account_segment, fm. main_pg as type ,fd.match_date, u.firstname, u.middlename, u.lastname from fixed_mms fm , fixed_matched fd , users u , user_fixed_matched fmd where fm.id=fd.fixed_mms_id and fmd.user_id=u.id and fmd.fixed_matched_id=fd.fixed_mms_id and fm.id=#{id}")
	public Transactionhistory matchDetailFixedMms(Long id);
	
	@Select("select distinct fm.main_pg as type, fm.account_segment as stock_account_segment, fd.match_date, fd.reconciliation_type, u.firstname, u.middlename, u.lastname, sc.value_date from stock_mms fm ,stock_core sc, stock_matched fd,\r\n"
			+ "			users u, user_stock_matched fmd where fm.id=fd.stock_mms_id and fmd.user_id=u.id and fmd.stock_matched_id=fd.stock_mms_id and sc.match_id = fd.match_id\r\n"
			+ "			and fm.id=#{id}")
	public Transactionhistory matchDetailStockMms(Long id);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms  where dfmms.main_pg like '%'+ #{category} + '%'   union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where fmms.main_pg like '%'+ #{category} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithCategoryMMS(GeneralTransactionHistory search);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms  where dfmms.branch_name like '%'+ #{branch_code} + '%'   union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where fmms.branch_name like '%'+ #{branch_code} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchMMS(GeneralTransactionHistory search);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms  where dfmms.tag_number like '%'+ #{tag_number} + '%'   union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where fmms.tag_number like '%'+ #{tag_number} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithTaghMMS(GeneralTransactionHistory search);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms  where dfmms.tag_number like '%'+ #{tag_number} + '%'  and dfmms.branch_name like '%'+ #{branch_code} + '%'  union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithTagbranchMMS(GeneralTransactionHistory search);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms  where dfmms.tag_number like '%'+ #{tag_number} + '%'  and dfmms.main_pg like '%'+ #{category} + '%'  union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where fmms.tag_number like '%'+ #{tag_number} + '%' and fmms.main_pg like '%'+ #{category} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchCatagoryWithTagMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms   where   (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where   ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and fmms.tag_number like '%'+ #{tag_number} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithReferenceTagMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms   where   (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.branch_name like '%'+ #{branch_code} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where   ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and fmms.branch_name like '%'+ #{branch_code} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithReferenceBranchMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms   where   (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where   ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and fmms.main_pg like '%'+ #{category} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithReferenceCategoryMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms   where   dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.main_pg like '%'+ #{category} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched fm where   fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.main_pg like '%'+ #{category} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchCategoryMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms   where   (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where   ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchCategoryReferenceTagMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms   where   (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%'  and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where   ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and fmms.main_pg like '%'+ #{category} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithCategoryReferenceTagMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms   where   (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%')  and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where   ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchReferenceTagMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms   where   (dfmms.giv_number like '%'+ #{reference} + '%' or dfmms.grv_number like '%' + #{reference} +'%') and dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%'  union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where   ( fmms.giv_number like '%'+ #{reference} + '%' or fmms.grv_number like '%' + #{reference} +'%' ) and fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%'  and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchReferenceCategoryMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.giv_number as reference,dfmms.asset_description as additional_information,dfmms.original_cost as debit,dfmms.book_value as credit,dfmms.branch_name as tran_code,dfmms.tag_number as store_name,dfmms.grv_number as store_code,dfmms.main_pg as category_description,dfmms.created_date as transaction_date,dfmms.old_main_pg as stock_account_segment from data_fixed_mms dfmms   where  dfmms.main_pg like '%'+ #{category} + '%' and dfmms.branch_name like '%'+ #{branch_code} + '%' and dfmms.tag_number like '%'+ #{tag_number} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.giv_number as reference,fmms.asset_description as additional_information,fmms.original_cost as debit,fmms.book_value as credit,fmms.branch_name as tran_code,fmms.tag_number as store_name,fmms.grv_number as store_code,fmms.main_pg as category_description,fmms.created_date as transaction_date,fmms.old_main_pg as stock_account_segment from fixed_mms fmms, fixed_matched  fm where fmms.main_pg like '%'+ #{category} + '%' and fmms.branch_name like '%'+ #{branch_code} + '%' and fmms.tag_number like '%'+ #{tag_number} + '%' and fm.fixed_mms_id = fmms.id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchTagCategoryMMS(GeneralTransactionHistory search);
}
