package com.example.demo.user.mapper;

import java.util.List;

import org.apache.ibatis.annotations.Mapper;

import org.apache.ibatis.annotations.Select;

import com.example.demo.user.model.GeneralTransactionHistory;
import com.example.demo.user.model.MatchDetailCore;
import com.example.demo.user.model.Transactionhistory;

@Mapper
public interface FixedAssetCoreMapper {

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms  where    (dfmms.debit + dfmms.credit) between #{debit} and  #{credit}  and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  ( fmms.debit + fmms.credit) between #{debit} and  #{credit}  and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and   fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithDebitCreditMMS(GeneralTransactionHistory searchHistory);


	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms   where   dfmms.naration like '%'+ #{reference} + '%'union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where   fmms.naration like '%' + #{reference} +'%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceMMS(GeneralTransactionHistory transaction_history);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms  where  ( dfmms.debit + dfmms.credit) >=  #{debit} and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  (fmms.debit + fmms.credit) >=#{debit} and fmms.naration like '%' + #{reference} +'%'  and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceAndDebit(GeneralTransactionHistory transaction_history);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms  where (dfmms.credit + dfmms.debit) <=  #{credit} and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'    union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where (fmms.credit + fmms.debit) <= #{credit} and fmms.naration like '%' + #{reference} +'%'   and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceAndCredit(GeneralTransactionHistory transaction_history);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms  where (dfmms.credit + dfmms.debit) <= #{credit} and  dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'    union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  (fmms.credit + fmms.debit) <= #{credit}  and fmms.transaction_date between  #{transaction_date} and #{max_upload_date}  and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithTransactionDateAndCredit(GeneralTransactionHistory transaction_history);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where   (dfmms.debit + dfmms.credit) >=#{debit} and  dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where    (fmms.debit + fmms.credit) >= #{debit} and fmms.transaction_date between  #{transaction_date} and #{max_upload_date} and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'   and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithTransactionDateAndDebit(GeneralTransactionHistory transaction_history);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where     dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} and dfmms.naration like '%'+ #{reference} + '%'  union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.transaction_date between  #{transaction_date} and #{max_upload_date}   and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReference_TransactionDate_MatchDateMMS(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where     dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} and dfmms.naration like '%'+ #{reference} + '%' and   (dfmms.debit + dfmms.credit) between #{debit} and #{credit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.transaction_date between  #{transaction_date} and #{max_upload_date}    and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and  ( fmms.debit + fmms.credit) between #{debit} and #{credit} and    fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithAllCriteriaMMS(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where     dfmms.transaction_date between  #{transaction_date} and #{max_upload_date}   and (dfmms.original_cost) >=#{debit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.transaction_date between  #{transaction_date} and #{max_upload_date} and (fmms.debit + fmms.credit) >=#{debit} and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}   and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'   and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithTransactionDateAndMatchDateAndDebit(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where     dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} and (dfmms.credit + dfmms.debit) <=#{credit}  union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.transaction_date between  #{transaction_date} and #{max_upload_date} and (fmms.credit + fmms.debit) <= #{credit}    and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%' and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithTransactionDateAndMatchDateAndCredit(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where     dfmms.naration like '%'+ #{reference} + '%' and (dfmms.original_cost ) >=#{debit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.naration like '%' + #{reference} +'%' and  (fmms.credit + fmms.debit) >= #{debit}   and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'   and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithDebitAndMatchDateAndReference(GeneralTransactionHistory transacrtion);

	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.naration like '%' + #{reference} +'%' and   ( fmms.debit + fmms.credit) between  #{debit}  and #{credit}  and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}   and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithDebitAndCreditAndMatchDateAndReference(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where   (dfmms.original_cost ) >=#{debit}  union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  (fmms.credit + fmms.debit) >= #{debit}  and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}   and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithMatchDateAndDebit(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where   (dfmms.credit + dfmms.debit) <= #{credit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  (fmms.credit + fmms.debit) <= #{credit}   and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithMatchDateAndCredit(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where   (dfmms.credit + dfmms.debit) <= #{credit} and dfmms.naration like '%'+ #{reference} + '%'union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and  (fmms.credit + fmms.debit) <= #{credit}  and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithCreditAndMatchDateAndReference(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where  (dfmms.credit + dfmms.debit ) >=#{debit} and  dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} and  dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and  (fmms.debit + fmms.credit) >=#{debit} and fmms.transaction_date between  #{transaction_date} and #{max_upload_date} and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithDebitAndTransactionDateAndReference(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where   (dfmms.credit + dfmms.debit) <= #{credit} and  dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} and  dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where   fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and (fmms.credit + fmms.debit) <= #{credit} and fmms.transaction_date between  #{transaction_date} and #{max_upload_date} and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithCreditAndTransactionDateAndReference(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where     (dfmms.debit + dfmms.credit) between #{debit} and #{credit}   and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.naration like '%' + #{reference} +'%' and  ( fmms.debit + fmms.credit) between #{debit} and #{credit}  and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithDebitCreditAndReference(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where     (dfmms.debit + dfmms.credit) between #{debit} and #{credit}   and  dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} and  dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.transaction_date between  #{transaction_date} and #{max_upload_date} and  ( fmms.debit + fmms.credit) between #{debit} and #{credit}  and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1 and  fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%' ")

	List<Transactionhistory> searchWithDebitCreditAndTransactionDate(GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where   dfmms.naration like '%'+ #{reference} + '%'union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and   fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceAndMatchDate(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where   dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   and  dfmms.transaction_date between  #{transaction_date} and #{max_upload_date}  union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.transaction_date between  #{transaction_date} and #{max_upload_date} and  fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and   fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithReferenceAndTransactionDate(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where  ( dfmms.debit + dfmms.credit) >=  #{debit}  and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  (fmms.debit + fmms.credit) >=  #{debit}  and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")

	public List<Transactionhistory> searchWithDebitMMS(GeneralTransactionHistory transaction_history);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where   (dfmms.credit + dfmms.debit) <=#{credit}  and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  (fmms.credit + fmms.debit) <=#{credit}  and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithCreditMMS(GeneralTransactionHistory transactionHistory);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where   dfmms.transaction_date  between  #{transaction_date} and #{max_upload_date} and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'    union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where    fmms.transaction_date between  #{transaction_date} and #{max_upload_date} and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithTransactionDateMMS(GeneralTransactionHistory transactionHistory);

	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  fm.match_id = fmms.match_id and fm.match_date  between  #{match_date2}  and #{max_match_date2}   and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithMatchDateMMS(GeneralTransactionHistory transactionHistory);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where     dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where    fmms.transaction_date between  #{transaction_date} and #{max_upload_date}  and fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}   and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithTransactionDateMatchDateMMS(GeneralTransactionHistory transactionHistory);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where    dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.credit + dfmms.debit) <= #{credit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where    fmms.transaction_date between  #{transaction_date} and #{max_upload_date}  and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and (fmms.credit + fmms.debit) <= #{credit} and fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")
	List<Transactionhistory> searchWithReferenceAndTransactionDateMatchDateCredit(
			GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where   dfmms.original_cost  between #{debit} and #{credit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  fmms.original_cost  between #{debit} and #{credit} and fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'   and fmms.availability = 1 and fmms.status=1")
	List<Transactionhistory> searchWithDebitMatchDateCredit(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where    dfmms.transaction_date between  #{transaction_date} and #{max_upload_date} and dfmms.naration like '%'+ #{reference} + '%' and (dfmms.credit + dfmms.debit) >= #{debit} and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where    fmms.transaction_date between  #{transaction_date} and #{max_upload_date} and fmms.naration like '%' + #{reference} +'%' and (fmms.debit + fmms.credit) >= #{debit} and fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1 and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'")

	List<Transactionhistory> searchWithReferenceAndTransactionDateMatchDateDebit(
			GeneralTransactionHistory transacrtion);

//	     @Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms    where    dfmms.transaction_date between  #{transaction_date} and #{max_upload_date}  anddfmms.original_costbetween #{debit} and  #{credit} union\r\n"
	@Select("select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where  fmms.transaction_date between  #{transaction_date} and #{max_upload_date}  and  ( fmms.debit + fmms.credit) between #{debit} and  #{credit}  and fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fm .match_date  between  #{match_date2}  and #{max_match_date2}  and fmms.availability = 1 and fmms.status=1")

	List<Transactionhistory> searchWithDebitCreditAndTransactionDateMatchDate(GeneralTransactionHistory transacrtion);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms  where (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%')   union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where (fmms.account_number like  #{com} + '%'  or fmms.account_number like #{ifb} + '%') and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithCategoryMMS(GeneralTransactionHistory search);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms  where dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchMMS(GeneralTransactionHistory search);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms  wh    union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm w   and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithTaghMMS(GeneralTransactionHistory search);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms  wh   and dfmms.branch_code like '%'+ #{branch_code} + '%'  union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm w  and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithTagbranchMMS(GeneralTransactionHistory search);

	@Select("select  distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms  wh   and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%')  union\r\n"
			+ " select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm w  and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%')  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchCatagoryWithTagMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms   where   dfmms.naration like '%'+ #{reference} + '%'  union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where   fmms.naration like '%' + #{reference} +'%'   and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithReferenceTagMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms   where   dfmms.naration like '%'+ #{reference} + '%' and dfmms.branch_code like '%'+ #{branch_code} + '%' union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where   fmms.naration like '%' + #{reference} +'%' and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithReferenceBranchMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms   where   dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where   fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%')  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithReferenceCategoryMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms   where   dfmms.branch_code like '%'+ #{branch_code} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched fm where   fmms.branch_code like '%'+ #{branch_code} + '%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%')  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchCategoryMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms   where   dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where   fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchCategoryReferenceTagMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms   where   dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%')    union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where   fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%')  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithCategoryReferenceTagMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms   where   dfmms.naration like '%'+ #{reference} + '%' and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where   fmms.naration like '%' + #{reference} +'%' and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchReferenceTagMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms   where   dfmms.naration like '%'+ #{reference} + '%' and (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'  union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where   fmms.naration like '%' + #{reference} +'%' and (fmms.account_number like  #{com} + '%' or fmms.account_number like #{ifb} + '%') and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchReferenceCategoryMMS(GeneralTransactionHistory search);

	@Select(" select distinct dfmms.id,dfmms.match_status,dfmms.posting_date,dfmms.account_name,dfmms.reference,dfmms.account_number,dfmms.debit,dfmms.credit,dfmms.branch_code,dfmms.value_date,dfmms.naration,dfmms.account_description, dfmms.transaction_date from data_fixed_core dfmms   where  (dfmms.account_number like  #{com} + '%' or dfmms.account_number like #{ifb} + '%') and dfmms.branch_code like '%'+ #{branch_code} + '%'   union\r\n"
			+ "select distinct fmms.id,fmms.match_status, fmms.posting_date,fmms.account_name,fmms.reference,fmms.account_number,fmms.debit,fmms.credit,fmms.branch_code,fmms.value_date,fmms.naration,fmms.account_description,fmms.transaction_date from fixed_core fmms, fixed_matched  fm where fmms.account_number like  #{com} + '%' and fmms.branch_code like '%'+ #{branch_code} + '%'  and fm.match_id = fmms.match_id and fmms.availability = 1 and fmms.status=1")
	public List<Transactionhistory> searchWithBranchTagCategoryMMS(GeneralTransactionHistory search);
	
	@Select(" select top 1 fc.value_date, fc.account_name ,md.match_date ,  md.reconciliation_type, u.firstname, u.middlename, u.lastname  from fixed_core fc , fixed_matched md,users u , user_fixed_matched fmd where fc.match_id = md.match_id and fmd.user_id=u.id and fmd.fixed_matched_id=md.id and  fc.id=#{id}")
	public Transactionhistory matchDetailFixedCore(Long id);
	   
	@Select("select top 1 fc.value_date, md.match_date , md.reconciliation_type, u.firstname, u.middlename,\r\n"
			+ "					u.lastname, sm.reference from stock_core fc , stock_mms sm, stock_matched md, users u , user_stock_matched fmd where fc.match_id = md.match_id and\r\n"
			+ "		     		fmd.user_id = u.id and fmd.stock_matched_id=md.id and sm.id= md.stock_mms_id and"
			+ " fc.id=#{id}")
	public Transactionhistory matchDetailStockCore(Long id);







}
